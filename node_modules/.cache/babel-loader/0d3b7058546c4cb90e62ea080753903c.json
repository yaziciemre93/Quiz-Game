{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [score, setScore] = React.useState(0);\n  const [startAgain, setStartAgain] = React.useState(false); // FETCH QUIZ DATA FROM API\n\n  const fetchData = async () => {\n    await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(response => response.json()).then(data => setData(data.results));\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []); // SHUFFLE ALGORITHM TO USE LATER\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  } // RENDER QUESTIONS\n\n\n  const questionElements = data.map((question, index) => {\n    // ANSWERS ARRAY AND SHUFFLE\n    let answers = [...question.incorrect_answers, question.correct_answer];\n    shuffle(answers);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      answerCheck: question.correct_answer,\n      index: index,\n      question: question.question,\n      answers: answers\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }); // CALCULATE FINAL SCORE WHEN CHECK BTN CLICKED\n\n  function calcScore() {\n    for (let question of questionElements) {\n      question.calcAnswer && setScore(prev => prev + 1);\n    }\n\n    setStartAgain(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [questionElements, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: startAgain && \"Your score is \" + score + \"/5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calcScore,\n      className: \"check-button\",\n      children: !startAgain ? \"Check Answers\" : \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"2cFG+Rp+gPCyh/OVoDazcFbAQPM=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Question","Quiz","data","setData","useState","score","setScore","startAgain","setStartAgain","fetchData","fetch","then","response","json","results","useEffect","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","questionElements","map","question","index","answers","incorrect_answers","correct_answer","calcScore","calcAnswer","prev"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js"],"sourcesContent":["import React from \"react\"\nimport Question from \"./Question\"\n\nexport default function Quiz() {\n\n    const [data, setData] = React.useState([])\n    const [score, setScore] = React.useState(0)\n    const [startAgain, setStartAgain] = React.useState(false)\n\n    // FETCH QUIZ DATA FROM API\n    const fetchData = async () => {\n        await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n        .then((response) => response.json())\n        .then((data) => setData(data.results))\n    }\n\n    React.useEffect(()=> {\n        fetchData()\n    },[])\n\n    // SHUFFLE ALGORITHM TO USE LATER\n    function shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle.\n        while (currentIndex != 0) {\n          // Pick a remaining element.\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n        return array;\n    }\n\n    // RENDER QUESTIONS\n    const questionElements = data.map((question, index) => {\n        // ANSWERS ARRAY AND SHUFFLE\n        let answers = [...question.incorrect_answers,question.correct_answer]\n        shuffle(answers)\n\n        return (\n            <Question answerCheck={question.correct_answer} key={index} index={index} question={question.question} answers={answers}/>\n        )\n    })\n\n    // CALCULATE FINAL SCORE WHEN CHECK BTN CLICKED\n    function calcScore() {\n        for(let question of questionElements) {\n            question.calcAnswer && setScore(prev => prev+1)\n        }\n        setStartAgain(true)\n    }\n\n    return (\n        <div className=\"question-container\">\n            {questionElements}\n            <p>{startAgain && (\"Your score is \"+ score +\"/5\")}</p>\n            <button onClick={calcScore} className=\"check-button\">{!startAgain ? \"Check Answers\" : \"Restart Quiz\"}</button>\n        </div>\n    )\n\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAe,CAAf,CAA1B;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACK,QAAN,CAAe,KAAf,CAApC,CAJ2B,CAM3B;;EACA,MAAMK,SAAS,GAAG,YAAY;IAC1B,MAAMC,KAAK,CAAC,oDAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECT,IAAD,IAAUC,OAAO,CAACD,IAAI,CAACY,OAAN,CAFjB,CAAN;EAGH,CAJD;;EAMAf,KAAK,CAACgB,SAAN,CAAgB,MAAK;IACjBN,SAAS;EACZ,CAFD,EAEE,EAFF,EAb2B,CAiB3B;;EACA,SAASO,OAAT,CAAiBC,KAAjB,EAAwB;IACpB,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;IAAA,IAAkCC,WAAlC,CADoB,CAGpB;;IACA,OAAOF,YAAY,IAAI,CAAvB,EAA0B;MACxB;MACAE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;MACAA,YAAY,GAHY,CAIxB;;MACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EACtBH,KAAK,CAACC,YAAD,CADiB,CAA5C;IAED;;IACD,OAAOD,KAAP;EACH,CA/B0B,CAiC3B;;;EACA,MAAMO,gBAAgB,GAAGtB,IAAI,CAACuB,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;IACnD;IACA,IAAIC,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,EAA+BH,QAAQ,CAACI,cAAxC,CAAd;IACAd,OAAO,CAACY,OAAD,CAAP;IAEA,oBACI,QAAC,QAAD;MAAU,WAAW,EAAEF,QAAQ,CAACI,cAAhC;MAA4D,KAAK,EAAEH,KAAnE;MAA0E,QAAQ,EAAED,QAAQ,CAACA,QAA7F;MAAuG,OAAO,EAAEE;IAAhH,GAAqDD,KAArD;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CARwB,CAAzB,CAlC2B,CA4C3B;;EACA,SAASI,SAAT,GAAqB;IACjB,KAAI,IAAIL,QAAR,IAAoBF,gBAApB,EAAsC;MAClCE,QAAQ,CAACM,UAAT,IAAuB1B,QAAQ,CAAC2B,IAAI,IAAIA,IAAI,GAAC,CAAd,CAA/B;IACH;;IACDzB,aAAa,CAAC,IAAD,CAAb;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA,WACKgB,gBADL,eAEI;MAAA,UAAIjB,UAAU,IAAK,mBAAkBF,KAAlB,GAAyB;IAA5C;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE0B,SAAjB;MAA4B,SAAS,EAAC,cAAtC;MAAA,UAAsD,CAACxB,UAAD,GAAc,eAAd,GAAgC;IAAtF;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GA5DuBN,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}