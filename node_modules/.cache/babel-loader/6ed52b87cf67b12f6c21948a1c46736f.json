{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [data, setData] = React.useState([]); // FETCH QUIZ DATA FROM API\n\n  const fetchData = async () => {\n    await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(response => response.json()).then(data => setData(data.results));\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []); // SHUFFLE ALGORITHM TO USE LATER\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  const questionElements = data.map((question, index) => {\n    // ANSWERS ARRAY AND SHUFFLE\n    let answers = [...question.incorrect_answers, question.correct_answer];\n    shuffle(answers);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      index: index,\n      question: question.question,\n      answers: answers\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: questionElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Question","Quiz","data","setData","useState","fetchData","fetch","then","response","json","results","useEffect","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","questionElements","map","question","index","answers","incorrect_answers","correct_answer"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js"],"sourcesContent":["import React from \"react\"\nimport Question from \"./Question\"\n\nexport default function Quiz() {\n\n    const [data, setData] = React.useState([])\n\n    // FETCH QUIZ DATA FROM API\n    const fetchData = async () => {\n        await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n        .then((response) => response.json())\n        .then((data) => setData(data.results))\n    }\n\n    React.useEffect(()=> {\n        fetchData()\n    },[])\n\n    // SHUFFLE ALGORITHM TO USE LATER\n    function shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle.\n        while (currentIndex != 0) {\n      \n          // Pick a remaining element.\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n      \n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n    }\n\n    const questionElements = data.map((question, index) => {\n        // ANSWERS ARRAY AND SHUFFLE\n        let answers = [...question.incorrect_answers,question.correct_answer]\n        shuffle(answers)\n\n        return (\n            <Question key={index} index={index} question={question.question} answers={answers}/>\n        )\n    })\n\n    return (\n        <div className=\"question-container\">\n            {questionElements}\n        </div>\n    )\n\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB,CAF2B,CAI3B;;EACA,MAAMC,SAAS,GAAG,YAAY;IAC1B,MAAMC,KAAK,CAAC,oDAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECL,IAAD,IAAUC,OAAO,CAACD,IAAI,CAACQ,OAAN,CAFjB,CAAN;EAGH,CAJD;;EAMAX,KAAK,CAACY,SAAN,CAAgB,MAAK;IACjBN,SAAS;EACZ,CAFD,EAEE,EAFF,EAX2B,CAe3B;;EACA,SAASO,OAAT,CAAiBC,KAAjB,EAAwB;IACpB,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;IAAA,IAAkCC,WAAlC,CADoB,CAGpB;;IACA,OAAOF,YAAY,IAAI,CAAvB,EAA0B;MAExB;MACAE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;MACAA,YAAY,GAJY,CAMxB;;MACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EACtBH,KAAK,CAACC,YAAD,CADiB,CAA5C;IAED;;IAED,OAAOD,KAAP;EACH;;EAED,MAAMO,gBAAgB,GAAGlB,IAAI,CAACmB,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;IACnD;IACA,IAAIC,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,EAA+BH,QAAQ,CAACI,cAAxC,CAAd;IACAd,OAAO,CAACY,OAAD,CAAP;IAEA,oBACI,QAAC,QAAD;MAAsB,KAAK,EAAED,KAA7B;MAAoC,QAAQ,EAAED,QAAQ,CAACA,QAAvD;MAAiE,OAAO,EAAEE;IAA1E,GAAeD,KAAf;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CARwB,CAAzB;EAUA,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA,UACKH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GAlDuBnB,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}