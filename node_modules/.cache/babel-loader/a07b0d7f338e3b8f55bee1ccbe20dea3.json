{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Button.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(props) {\n  _s();\n\n  const [btnClassNames, setBtnClassNames] = React.useState(\"answer-button\");\n  const [flag, setFlag] = React.useState(true);\n  React.useEffect(() => {}, [props.answers]);\n\n  function toggleBtnColor() {\n    if (flag && !props.mutateButtons) {\n      console.log(props.mutateButtons);\n      setBtnClassNames(\"answer-button dark-bg-color\");\n      setFlag(false);\n      props.setMutateButtons(true);\n    }\n\n    if (props.correctAnswer == props.answer) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClassNames,\n    value: props.answer,\n    onClick: toggleBtnColor,\n    children: props.answer\n  }, props.index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Button, \"n5ZiI1Tuu8WReRgwKUAVWkhFbxc=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useDispatch","Button","props","btnClassNames","setBtnClassNames","useState","flag","setFlag","useEffect","answers","toggleBtnColor","mutateButtons","console","log","setMutateButtons","correctAnswer","answer","index"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Button.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Button(props) {\n\n    const [btnClassNames, setBtnClassNames] =React.useState(\"answer-button\") \n    const [flag , setFlag] = React.useState(true) \n\n    React.useEffect(() => {}, [props.answers])\n\n    function toggleBtnColor() {\n        if(flag && !props.mutateButtons) {\n            console.log(props.mutateButtons)\n            setBtnClassNames(\"answer-button dark-bg-color\")\n            setFlag(false)\n            props.setMutateButtons(true)\n        }\n        if(props.correctAnswer == props.answer) {}\n    }\n\n    return (\n        <button className={btnClassNames}  key={props.index} value={props.answer} onClick={toggleBtnColor} >{props.answer}</button>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EAElC,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAmCL,KAAK,CAACM,QAAN,CAAe,eAAf,CAAzC;EACA,MAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBR,KAAK,CAACM,QAAN,CAAe,IAAf,CAAzB;EAEAN,KAAK,CAACS,SAAN,CAAgB,MAAM,CAAE,CAAxB,EAA0B,CAACN,KAAK,CAACO,OAAP,CAA1B;;EAEA,SAASC,cAAT,GAA0B;IACtB,IAAGJ,IAAI,IAAI,CAACJ,KAAK,CAACS,aAAlB,EAAiC;MAC7BC,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACS,aAAlB;MACAP,gBAAgB,CAAC,6BAAD,CAAhB;MACAG,OAAO,CAAC,KAAD,CAAP;MACAL,KAAK,CAACY,gBAAN,CAAuB,IAAvB;IACH;;IACD,IAAGZ,KAAK,CAACa,aAAN,IAAuBb,KAAK,CAACc,MAAhC,EAAwC,CAAE;EAC7C;;EAED,oBACI;IAAQ,SAAS,EAAEb,aAAnB;IAAqD,KAAK,EAAED,KAAK,CAACc,MAAlE;IAA0E,OAAO,EAAEN,cAAnF;IAAA,UAAqGR,KAAK,CAACc;EAA3G,GAAwCd,KAAK,CAACe,KAA9C;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH;;GApBuBhB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}