{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { calculate } from \"./score\";\nimport { useSelector } from \"react-redux\";\nimport { initColor } from \"./color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const color = useSelector(state => state.color.value);\n  const btnClassNames = color === \"light-bg-color\" ? \"light-answer-button\" : \"dark-answer-button\";\n  React.useEffect(() => {\n    dispatch(initColor(\"light-bg-color\"));\n  }, [props.answers]); // TOGGLE BUTTON BACKGROUND COLOR WHEN BTN CLICKED\n\n  function toggleBtnBgColor(btn, correctAnswer) {\n    if (color == \"light-bg-color\") {\n      dispatch(initColor(\"dark-bg-color\"));\n    }\n\n    btn.target.classList.add(btnClassNames);\n\n    if (btn.target.value == correctAnswer) {\n      dispatch(calculate(1));\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: props.question\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), props.answers.map((answer, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"answer-button\",\n        value: answer,\n        onClick: event => toggleBtnBgColor(event, props.correctAnswer),\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(Question, \"5hk4kt6OgzZ7Y7iNJVMgmTl2fEA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useDispatch","calculate","useSelector","initColor","Question","props","dispatch","color","state","value","btnClassNames","useEffect","answers","toggleBtnBgColor","btn","correctAnswer","target","classList","add","question","index","map","answer","event"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Question.js"],"sourcesContent":["import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { calculate } from \"./score\"\nimport { useSelector } from \"react-redux\"\nimport { initColor } from \"./color\"\n\nexport default function Question(props) {\n\n    const dispatch = useDispatch()\n    const color = useSelector((state) => state.color.value)\n    const btnClassNames = color === \"light-bg-color\" ? \"light-answer-button\" : \"dark-answer-button\"\n\n    React.useEffect(() => {\n        dispatch(initColor(\"light-bg-color\"))\n    }, [props.answers])\n\n    // TOGGLE BUTTON BACKGROUND COLOR WHEN BTN CLICKED\n    function toggleBtnBgColor(btn, correctAnswer) {\n        if(color == \"light-bg-color\") {\n            dispatch(initColor(\"dark-bg-color\"))\n        }\n        btn.target.classList.add(btnClassNames)\n            \n\n        if(btn.target.value == correctAnswer) {\n            dispatch(calculate(1))\n            return\n        }\n    }\n\n    return (\n        <>\n            <div className=\"question\" key={props.index}>{props.question}</div>\n                {props.answers.map((answer,index)=> {\n                    return (\n                        <button className=\"answer-button\" key={index} value={answer} onClick={event => toggleBtnBgColor(event,props.correctAnswer)} >{answer}</button>\n                    )\n            })}\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,SAA1B;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYE,KAAxB,CAAzB;EACA,MAAMC,aAAa,GAAGH,KAAK,KAAK,gBAAV,GAA6B,qBAA7B,GAAqD,oBAA3E;EAEAR,KAAK,CAACY,SAAN,CAAgB,MAAM;IAClBL,QAAQ,CAACH,SAAS,CAAC,gBAAD,CAAV,CAAR;EACH,CAFD,EAEG,CAACE,KAAK,CAACO,OAAP,CAFH,EANoC,CAUpC;;EACA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,aAA/B,EAA8C;IAC1C,IAAGR,KAAK,IAAI,gBAAZ,EAA8B;MAC1BD,QAAQ,CAACH,SAAS,CAAC,eAAD,CAAV,CAAR;IACH;;IACDW,GAAG,CAACE,MAAJ,CAAWC,SAAX,CAAqBC,GAArB,CAAyBR,aAAzB;;IAGA,IAAGI,GAAG,CAACE,MAAJ,CAAWP,KAAX,IAAoBM,aAAvB,EAAsC;MAClCT,QAAQ,CAACL,SAAS,CAAC,CAAD,CAAV,CAAR;MACA;IACH;EACJ;;EAED,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,UAAf;MAAA,UAA6CI,KAAK,CAACc;IAAnD,GAA+Bd,KAAK,CAACe,KAArC;MAAA;MAAA;MAAA;IAAA,QADJ,EAESf,KAAK,CAACO,OAAN,CAAcS,GAAd,CAAkB,CAACC,MAAD,EAAQF,KAAR,KAAiB;MAChC,oBACI;QAAQ,SAAS,EAAC,eAAlB;QAA8C,KAAK,EAAEE,MAArD;QAA6D,OAAO,EAAEC,KAAK,IAAIV,gBAAgB,CAACU,KAAD,EAAOlB,KAAK,CAACU,aAAb,CAA/F;QAAA,UAA8HO;MAA9H,GAAuCF,KAAvC;QAAA;QAAA;QAAA;MAAA,QADJ;IAGP,CAJI,CAFT;EAAA,gBADJ;AAUH;;GAlCuBhB,Q;UAEHJ,W,EACHE,W;;;KAHME,Q"},"metadata":{},"sourceType":"module"}