{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n\n  const fetchData = () => {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(response => response.json()).then(data => setQuestions(data.results));\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  const questionElements = questions.map(question => {\n    function btnClicked() {\n      let style = {\n        backgroundColor: \"#D6DBF5\"\n      };\n      return style;\n    }\n\n    let answers = question.incorrect_answers;\n    answers = [...answers, question.correct_answer];\n    shuffle(answers);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: question.question\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), answers.map(answer => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: btnClicked,\n          style: btnClicked,\n          className: \"answer-button\",\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: questionElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","nanoid","Quiz","questions","setQuestions","useState","fetchData","fetch","then","response","json","data","results","useEffect","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","questionElements","map","question","btnClicked","style","backgroundColor","answers","incorrect_answers","correct_answer","answer"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js"],"sourcesContent":["import React from \"react\"\nimport { nanoid } from \"nanoid\"\n\nexport default function Quiz() {\n\n    const [questions, setQuestions] = React.useState([])\n\n    const fetchData = () => {\n        fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n        .then((response) => response.json())\n        .then((data) => setQuestions(data.results))\n    }\n\n    React.useEffect(()=> {\n        fetchData()\n    },[])\n\n    function shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle.\n        while (currentIndex != 0) {\n      \n          // Pick a remaining element.\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n      \n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n    }\n\n    const questionElements = questions.map((question) => {\n        function btnClicked(){\n            let style = {backgroundColor: \"#D6DBF5\"}\n            return style\n        }\n\n        let answers = question.incorrect_answers\n        answers = [...answers, question.correct_answer]\n        shuffle(answers)\n        return (\n            <>\n                <div className=\"question\" key={nanoid()}>{question.question}</div>\n                {answers.map((answer)=> {\n                    return (\n                        <button onClick={btnClicked} style={btnClicked} className=\"answer-button\">{answer}</button>\n                    )\n                })}\n                <hr></hr>\n            </>\n        )\n    })\n\n    return (\n        <div className=\"question-container\">\n            {questionElements}\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;;EAEA,MAAMC,SAAS,GAAG,MAAM;IACpBC,KAAK,CAAC,oDAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUP,YAAY,CAACO,IAAI,CAACC,OAAN,CAF5B;EAGH,CAJD;;EAMAZ,KAAK,CAACa,SAAN,CAAgB,MAAK;IACjBP,SAAS;EACZ,CAFD,EAEE,EAFF;;EAIA,SAASQ,OAAT,CAAiBC,KAAjB,EAAwB;IACpB,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;IAAA,IAAkCC,WAAlC,CADoB,CAGpB;;IACA,OAAOF,YAAY,IAAI,CAAvB,EAA0B;MAExB;MACAE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;MACAA,YAAY,GAJY,CAMxB;;MACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EACtBH,KAAK,CAACC,YAAD,CADiB,CAA5C;IAED;;IAED,OAAOD,KAAP;EACH;;EAED,MAAMO,gBAAgB,GAAGnB,SAAS,CAACoB,GAAV,CAAeC,QAAD,IAAc;IACjD,SAASC,UAAT,GAAqB;MACjB,IAAIC,KAAK,GAAG;QAACC,eAAe,EAAE;MAAlB,CAAZ;MACA,OAAOD,KAAP;IACH;;IAED,IAAIE,OAAO,GAAGJ,QAAQ,CAACK,iBAAvB;IACAD,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAaJ,QAAQ,CAACM,cAAtB,CAAV;IACAhB,OAAO,CAACc,OAAD,CAAP;IACA,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,UAAf;QAAA,UAA0CJ,QAAQ,CAACA;MAAnD,GAA+BvB,MAAM,EAArC;QAAA;QAAA;QAAA;MAAA,QADJ,EAEK2B,OAAO,CAACL,GAAR,CAAaQ,MAAD,IAAW;QACpB,oBACI;UAAQ,OAAO,EAAEN,UAAjB;UAA6B,KAAK,EAAEA,UAApC;UAAgD,SAAS,EAAC,eAA1D;UAAA,UAA2EM;QAA3E;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJA,CAFL,eAOI;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA,gBADJ;EAWH,CApBwB,CAAzB;EAsBA,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA,UACKT;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA3DuBpB,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}