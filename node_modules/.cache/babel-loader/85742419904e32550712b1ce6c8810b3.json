{"ast":null,"code":"var _jsxFileName = \"/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const score = useSelector(state => state.score.value);\n  const [data, setData] = React.useState([]);\n  const [startAgain, setStartAgain] = React.useState(false);\n  const [restart, setRestart] = React.useState(false); // FETCH QUIZ DATA FROM API\n\n  const fetchData = async () => {\n    await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(response => response.json()).then(data => {\n      for (let question of data.results) {\n        question.incorrect_answers = shuffle([...question.incorrect_answers, question.correct_answer]);\n      }\n\n      setData(data.results);\n    });\n  };\n\n  React.useEffect(() => {\n    setRestart(false);\n    fetchData();\n  }, [restart]); // SHUFFLE ALGORITHM TO USE LATER\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  } // RENDER QUESTIONS\n\n\n  const questionElements = data.map((question, index) => {\n    let answers = question.incorrect_answers;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        correctAnswer: question.correct_answer,\n        index: index,\n        question: question.question,\n        answers: answers\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), startAgain && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct answer : \", question.correct_answer]\n      }, index + 5, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }); // CALCULATE FINAL SCORE WHEN CHECK BTN CLICKED\n\n  function calcScore() {\n    setStartAgain(true);\n  }\n\n  function resQuiz() {\n    setStartAgain(false);\n    setRestart(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [questionElements, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: startAgain && \"Your score is \" + score + \"/5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), !startAgain && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calcScore,\n      className: \"check-button\",\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }, this), startAgain && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resQuiz,\n      className: \"check-button\",\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"h/Wgrr7mX0cUq5NV5lcEnPtol6Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Question","useSelector","Quiz","score","state","value","data","setData","useState","startAgain","setStartAgain","restart","setRestart","fetchData","fetch","then","response","json","question","results","incorrect_answers","shuffle","correct_answer","useEffect","array","currentIndex","length","randomIndex","Math","floor","random","questionElements","map","index","answers","calcScore","resQuiz"],"sources":["/Users/emre/Desktop/React/quizzical-trivia/src/Quiz.js"],"sourcesContent":["import React from \"react\"\nimport Question from \"./Question\"\nimport { useSelector } from \"react-redux\"\n\nexport default function Quiz() {\n\n    const score = useSelector((state) => state.score.value)\n\n    const [data, setData] = React.useState([])\n    const [startAgain, setStartAgain] = React.useState(false)\n    const [restart, setRestart] = React.useState(false)\n\n    // FETCH QUIZ DATA FROM API\n    const fetchData = async () => {\n        await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n        .then((response) => response.json())\n        .then((data) => {\n            for(let question of data.results) {\n                question.incorrect_answers = shuffle([...question.incorrect_answers, question.correct_answer])\n            }\n            setData(data.results)})\n    }\n\n    React.useEffect(()=> {\n        setRestart(false)\n        fetchData()\n    },[restart])\n\n\n    // SHUFFLE ALGORITHM TO USE LATER\n    function shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle.\n        while (currentIndex != 0) {\n          // Pick a remaining element.\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n        return array;\n    }\n\n    // RENDER QUESTIONS\n    const questionElements = data.map((question, index) => {\n\n        let answers = question.incorrect_answers\n\n        return (\n            <div key={index}>\n                <Question correctAnswer={question.correct_answer} key={index} index={index} question={question.question} answers={answers}/>\n                {startAgain && <p key={index+5}>Correct answer : {question.correct_answer}</p>}\n            </div>\n        )\n    })\n\n    // CALCULATE FINAL SCORE WHEN CHECK BTN CLICKED\n    function calcScore() {\n        setStartAgain(true)\n\n    }\n\n    function resQuiz() {\n        setStartAgain(false)\n        setRestart(true)\n    }\n\n    return (\n        <div className=\"question-container\">\n            {questionElements}\n            <p>{startAgain && (\"Your score is \"+ score +\"/5\")}</p>\n            {!startAgain && <button onClick={calcScore} className=\"check-button\">Check Answers</button>}\n            {startAgain && <button onClick={resQuiz} className=\"check-button\">Restart Quiz</button>}\n        </div>\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}